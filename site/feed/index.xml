<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"> 
  <id>http://loopinfinito.com.br/</id>
  <title>Loop Infinito</title>
  <icon>http://loopinfinito.com.br/images/favicon.png</icon>
  <updated>2012-04-21T22:17:42-03:00</updated>
  <link rel="self" href="http://loopinfinito.com.br/feed/index.xml" />
  <link href="http://loopinfinito.com.br/" />
  
  <entry>
    <id>http://loopinfinito.com.br/2012/04/14/css-filters</id>
    <title>CSS Filters</title>    
    <updated>2012-04-14T00:00:00-03:00</updated>
    <link href="http://loopinfinito.com.br/2012/04/14/css-filters.html" />
    <author>
      <name>Caio Gondim</name>
    </author>
    <content type="html">&lt;style&gt;

	#cssfilter-img-base:hover {
		-webkit-transition: all 1s linear;
	}

	#cssfilter-img-base:hover {
		-webkit-filter: saturate(4);

	}

&lt;/style&gt;
&lt;p&gt;A Adobe, Apple e Opera estão &lt;a href='https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html'&gt;trabalhando juntas&lt;/a&gt; para trazer alguns efeitos no estilo Photoshop para o CSS. Esses efeitos, chamados de filtros, irão nos permitir modificar a renderização de qualquer elemento DOM, de um simples &lt;code&gt;p&lt;/code&gt;, até elementos mais complexos como &lt;code&gt;image&lt;/code&gt; ou &lt;code&gt;video&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alguns dos efeitos já definidos na especificação são &lt;code&gt;grayscale&lt;/code&gt;, &lt;code&gt;blur&lt;/code&gt;, &lt;code&gt;sepia&lt;/code&gt;, &lt;code&gt;saturate&lt;/code&gt;, &lt;code&gt;opacity&lt;/code&gt;, &lt;code&gt;brightness&lt;/code&gt;, &lt;code&gt;contrast&lt;/code&gt;, &lt;code&gt;hue-rotate&lt;/code&gt; e &lt;code&gt;invert&lt;/code&gt;. Aos familiarizados com Photoshop ou qualquer programa de edição de imagem, eles devem ser bastante auto-explicativos. Mas de qualquer forma, vamos explorar cada filtro, um a um.&lt;/p&gt;

&lt;p&gt;Em todos os exemplos, iremos usar a imagem abaixo como base. Para verificar se o seu navegador suporta o CSS Filter, apenas passe o mouse por cima da imagem. Se ela modificar (saturar), quer dizer que o seu navegador suporta e já está aplicando um filtro no evento hover desta imagem.&lt;/p&gt;
&lt;p&gt;&lt;img id='cssfilter-img-base' src='http://loopinfinito.com.br/images/posts/jeri.jpg' /&gt;&lt;/p&gt;
&lt;h2 id='grayscale'&gt;Grayscale&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-grayscale.png' /&gt;&lt;/p&gt;
&lt;p&gt;Com o filtro &lt;code&gt;grayscale&lt;/code&gt; nós indicamos o quão preto-e-branco queremos que o elemento fique, numa escala de 0 a 1 ou 0% 100%.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: grayscale(100%);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='blur'&gt;Blur&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-blur.png' /&gt;&lt;/p&gt;
&lt;p&gt;Com o filtro &lt;code&gt;blur&lt;/code&gt; podemos embaçar um elemento. Algo parecido como ver uma foto sem óculos (eu imagino que seja assim). Os valores são definidos em pixels. Quanto maior o valor, mais embaçado o elemento.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: blur(3px);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='sepia'&gt;Sepia&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-sepia.png' /&gt;&lt;/p&gt;
&lt;p&gt;Este efeito é normamelmente usado em fotos, dando a elas um efeito de fotos antigas. Os valores do efeito vão de 0 a 1.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: sepia(1);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='saturate'&gt;Saturate&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-saturate.png' /&gt;&lt;/p&gt;
&lt;p&gt;Com o &lt;code&gt;saturate&lt;/code&gt; modificamos o canal saturação da cores do elemento. Quanto maior a saturação, mais vivas as cores estarão, e quanto menor a saturação, mais próximas do cinza elas estarão. Com o &lt;ceode&gt;saturate&lt;/ceode&gt; em 0, obtemos o mesmo resultado que o &lt;code&gt;grayscale&lt;/code&gt; em 100%&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: saturate(4);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='opacity'&gt;Opacity&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-opacity.png' /&gt;&lt;/p&gt;
&lt;p&gt;Ok, esse é bastante fácil. Simplesmente mude a opacidade do elemento. Os valores vão de 0 a 1. 0 deixa o elemento invisível.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: opacity(0.5);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='brightness'&gt;Brightness&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-brightness.png' /&gt;&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;brightness&lt;/code&gt; altera o brilho do elemento. Os valores vão de 100% a 0%. Em 100%, com o brilho no máximo, o elemento fica totalmente branco.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: brightness(50%);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='contrast'&gt;Contrast&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-contrast.png' /&gt;&lt;/p&gt;
&lt;p&gt;Também bastante óbvio. Aqui alteramos a saturação do elemento. O valor desse filtro pode ser expresso em unidades (0, 1, 3, 4, &amp;#8230;) ou em percentagem (0%, 100%, 1500%).&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: constrast(1.5);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='hue_rotate'&gt;Hue Rotate&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-hue-rotate.png' /&gt;&lt;/p&gt;
&lt;p&gt;Neste filtro podemos mover todas as cores do elemento em graus dentro da roda de cores. Com 0deg não iremos realizar nenhuma alteração, enquanto com 180deg iremos inverter todas as cores.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: hue-rotate(180deg);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='invert'&gt;Invert&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-invert.png' /&gt;&lt;/p&gt;
&lt;p&gt;Com o &lt;code&gt;invert&lt;/code&gt; invertemos todas as cores. Na verdade a inversão completa acontece apenas se usarmos o valor 100%. Com 50% as cores estarão no meio caminho entre suas cores invertidas, o que significa que estarão com um tom de cinza. Os valores vão de 0% a 100%.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: invert(100%);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id='vrios_filtros'&gt;Vários filtros&lt;/h2&gt;
&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/jeri-various.png' /&gt;&lt;/p&gt;
&lt;p&gt;Também é possível o uso de vários filtros em conjunto, para obtermos um efeito mais único. Na imagem acima usamos &lt;code&gt;hue-rotate&lt;/code&gt; e &lt;code&gt;sepia&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code data-language='css'&gt;
img {
    -webkit-filter: hue-rotate(60deg) sepia(1);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como podemos ver o CSS Filters vem adicionar ainda mais poder ao HTML5. E isto é só uma prévia do que há por vir, como os &lt;a href='http://www.youtube.com/watch?v=NZRqnohI3m4'&gt;CSS Shaders&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No momento em que escrevo este post, os CSS Filters rodam no &lt;a href='http://tools.google.com/dlpage/chromesxs'&gt;Google Chrome Canary&lt;/a&gt;, &lt;a href='http://www.google.com/chrome/intl/en/eula_dev.html'&gt;Google Chrome dev channel&lt;/a&gt; e &lt;a href='http://nightly.webkit.org/'&gt;WebKit Nightly Build&lt;/a&gt;.&lt;/p&gt;
&lt;aside class='fonte'&gt;
	&lt;h3&gt;Referência&lt;/h3&gt;
	&lt;ul&gt;
		&lt;li&gt;&lt;a href='http://net.tutsplus.com/tutorials/html-css-techniques/say-hello-to-css3-filters/'&gt;NetTuts&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href='http://davidwalsh.name/css-filters'&gt;David Walsh&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href='http://updates.html5rocks.com/2011/12/CSS-Filter-Effects-Landing-in-WebKit'&gt;HTML5 Rocks&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href='https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html'&gt;W3C&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;
&lt;/aside&gt;</content>
  </entry>
  
  <entry>
    <id>http://loopinfinito.com.br/2012/04/01/hello-web</id>
    <title>console.log(<span class="light">‘Hello Web!’</span>)</title>    
    <updated>2012-04-01T00:00:00-03:00</updated>
    <link href="http://loopinfinito.com.br/2012/04/01/hello-web.html" />
    <author>
      <name>Caio Gondim</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src='http://loopinfinito.com.br/images/posts/darth-vader-and-elvis.jpeg' /&gt;&lt;/p&gt;
&lt;p&gt;O Loop Infinito é uma idéia antiga minha &lt;a href='http://twitter.com/caio_gondim'&gt;(@caio_gondim)&lt;/a&gt; e de Almir Filho &lt;a href='http://twitter.com/almirfilho'&gt;(@almirfilho)&lt;/a&gt;, onde queríamos começar um blog pra postar todas as nossas &amp;#8220;descobertas&amp;#8221; e experimentos sobre desenvolvimento web. Anos se passaram desde essa idéia, e hoje, finalmente, a idéia vira realidade.&lt;/p&gt;

&lt;p&gt;Aqui no blog postaremos principalmente sobre desenvolvimento web, mas alguns outros tópicos como produtividade, interface de usuário e nerdices em geral podem surgir de forma mais esporádica.&lt;/p&gt;

&lt;p&gt;A meta do blog é: tornar-se o melhor blog sobre desenvolvimento web em língua portuguesa. Sim, ela é bastante ambiciosa, e nós sabemos que nunca iremos alcançá-la sozinhos, por isso que precisamos da sua contribuição.&lt;/p&gt;

&lt;h2 id='contribuindo'&gt;Contribuindo&lt;/h2&gt;

&lt;p&gt;O Loop Infinito é gerenciado como um projeto de software livre, tendo todo o código disponível no &lt;a href='https://github.com/loopinfinito/loopinfinito.com.br'&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para contribuir com um post, basta dar um fork no nosso projeto, escrever seu post e nos enviar um pull request. &lt;strong&gt;Like a Hacker&lt;/strong&gt;. Não há banco de dados e muito menos linguagem no back-end. Todo o código é estático e totalmente aberto.&lt;/p&gt;

&lt;p&gt;Então se você acha que tem algo a acrescentar para a comunidade de desenvolvimento web brasileira, por que não dar um fork agora no projeto, escrever o post e nos enviar um pull request?&lt;/p&gt;

&lt;h2 id='melhor_feito_que_perfeito'&gt;Melhor feito que perfeito&lt;/h2&gt;

&lt;p&gt;Um dos grandes motivos do blog ter demorado tanto tempo é essa busca pela perfeição, que estava atrasando o projeto indefinidamente, já que nunca estávamos satisfeitos com o design, a logo, as ferramentas usadas, etc.&lt;/p&gt;

&lt;p&gt;Mas então se percebe que a perfeição não é um objetivo, já que é impossível alcançá-la. Mas sim um compromisso diário em sempre caminhar em sua direção. E este é o nosso compromisso. Não em sermos os melhores no dia 1, mas sim em sermos melhores que ontem, todos os dias. E é assim que o blog será gerenciado, com iterações constantes e graduais.&lt;/p&gt;

&lt;p&gt;Então esperem coisas boas acontecerem por aqui. Sempre.&lt;/p&gt;

&lt;h2 id='atualizao'&gt;Atualização&lt;/h2&gt;

&lt;p&gt;Qualquer atualização no site iremos tuitar no &lt;a href='http://twitter.com/loopinfinito'&gt;@loopinfinito&lt;/a&gt;. E lá também postaremos notícias relacionadas ao mundo do desenvolvimento web.&lt;/p&gt;

&lt;p&gt;Um feed RSS também será implementado.&lt;/p&gt;

&lt;h2 id='id1'&gt;}&lt;/h2&gt;

&lt;p&gt;Estamos muito empolgados e satisfeitos com o projeto finalmente estando no ar (ou nas nuvens). Esperamos que gostem do conteúdo e mandem idéias para posts, comentem e, principalmente, nos mandem pull requests no &lt;a href='https://github.com/loopinfinito/loopinfinito.com.br'&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  
</feed>